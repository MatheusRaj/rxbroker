"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getMessages = void 0;
const tslib_1 = require("tslib");
const operators = tslib_1.__importStar(require("rxjs/operators"));
const rxjs = tslib_1.__importStar(require("rxjs"));
const db_1 = tslib_1.__importDefault(require("./db"));
exports.getMessages = async (queue = '') => {
    try {
        const data = await db_1.default.raw(`RECEIVE TOP(1) CONVERT(NVARCHAR(MAX), message_body) AS Message FROM ${queue};`);
        return data;
    }
    catch (err) {
        console.log(err);
        return [];
    }
};
const listen = async (queue, callback) => {
    return rxjs
        .interval(1000)
        .pipe(operators.exhaustMap(() => rxjs.from(exports.getMessages(queue))), operators.flatMap(messages => {
        const data = messages.map(m => m.Message);
        return rxjs.of(...data);
    }), operators.filter(m => !!m))
        .subscribe(async (message) => {
        callback(message);
    });
};
exports.default = listen;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXVldWUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvcXVldWUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGtFQUE0QztBQUM1QyxtREFBNkI7QUFDN0Isc0RBQThCO0FBRWpCLFFBQUEsV0FBVyxHQUFHLEtBQUssRUFBRSxRQUFnQixFQUFFLEVBQUUsRUFBRTtJQUN0RCxJQUFJO1FBQ0YsTUFBTSxJQUFJLEdBQUcsTUFBTSxZQUFVLENBQUMsR0FBRyxDQUFDLHVFQUF1RSxLQUFLLEdBQUcsQ0FBQyxDQUFDO1FBRW5ILE9BQU8sSUFBSSxDQUFDO0tBQ2I7SUFBQyxPQUFPLEdBQUcsRUFBRTtRQUNaLE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDakIsT0FBTyxFQUFFLENBQUM7S0FDWDtBQUNILENBQUMsQ0FBQztBQUVGLE1BQU0sTUFBTSxHQUFHLEtBQUssRUFBRSxLQUFhLEVBQUUsUUFBNkIsRUFBRSxFQUFFO0lBQ3BFLE9BQU8sSUFBSTtTQUNSLFFBQVEsQ0FBQyxJQUFJLENBQUM7U0FDZCxJQUFJLENBQ0gsU0FBUyxDQUFDLFVBQVUsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLG1CQUFXLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUN6RCxTQUFTLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxFQUFFO1FBQzNCLE1BQU0sSUFBSSxHQUFHLFFBQVEsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUM7UUFFMUMsT0FBTyxJQUFJLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUM7SUFDMUIsQ0FBQyxDQUFDLEVBQ0YsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FDM0I7U0FDQSxTQUFTLENBQUMsS0FBSyxFQUFDLE9BQU8sRUFBQyxFQUFFO1FBQ3pCLFFBQVEsQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUNwQixDQUFDLENBQUMsQ0FBQztBQUNQLENBQUMsQ0FBQztBQUVGLGtCQUFlLE1BQU0sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIG9wZXJhdG9ycyBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5pbXBvcnQgKiBhcyByeGpzIGZyb20gJ3J4anMnO1xuaW1wb3J0IGNvbm5lY3Rpb24gZnJvbSAnLi9kYic7XG5cbmV4cG9ydCBjb25zdCBnZXRNZXNzYWdlcyA9IGFzeW5jIChxdWV1ZTogc3RyaW5nID0gJycpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCBkYXRhID0gYXdhaXQgY29ubmVjdGlvbi5yYXcoYFJFQ0VJVkUgVE9QKDEpIENPTlZFUlQoTlZBUkNIQVIoTUFYKSwgbWVzc2FnZV9ib2R5KSBBUyBNZXNzYWdlIEZST00gJHtxdWV1ZX07YCk7XG5cbiAgICByZXR1cm4gZGF0YTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgY29uc29sZS5sb2coZXJyKTtcbiAgICByZXR1cm4gW107XG4gIH1cbn07XG5cbmNvbnN0IGxpc3RlbiA9IGFzeW5jIChxdWV1ZTogc3RyaW5nLCBjYWxsYmFjazogKGRhdGE6IGFueSkgPT4gdm9pZCkgPT4ge1xuICByZXR1cm4gcnhqc1xuICAgIC5pbnRlcnZhbCgxMDAwKVxuICAgIC5waXBlKFxuICAgICAgb3BlcmF0b3JzLmV4aGF1c3RNYXAoKCkgPT4gcnhqcy5mcm9tKGdldE1lc3NhZ2VzKHF1ZXVlKSkpLFxuICAgICAgb3BlcmF0b3JzLmZsYXRNYXAobWVzc2FnZXMgPT4ge1xuICAgICAgICBjb25zdCBkYXRhID0gbWVzc2FnZXMubWFwKG0gPT4gbS5NZXNzYWdlKTtcblxuICAgICAgICByZXR1cm4gcnhqcy5vZiguLi5kYXRhKTtcbiAgICAgIH0pLFxuICAgICAgb3BlcmF0b3JzLmZpbHRlcihtID0+ICEhbSlcbiAgICApXG4gICAgLnN1YnNjcmliZShhc3luYyBtZXNzYWdlID0+IHtcbiAgICAgIGNhbGxiYWNrKG1lc3NhZ2UpO1xuICAgIH0pO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgbGlzdGVuO1xuIl19